package ca.herzing.automobile;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;


public class AutoCustomerGui extends JFrame {
    private final JTextField nameField = new JTextField(20);
    private final JComboBox<String> typeBox = new JComboBox<>(new String[]{"Select", "Employee", "Manager"});
    private final JTextField amountField = new JTextField(10);
    private final JTextArea outputArea = new JTextArea(12, 60);
    private final JLabel lblNote = new JLabel(" ");

    
    
    // to change: mysql 8.2
    private final String DB_URL_CONNECTION = "jdbc:mysql://localhost:3306/loanaccounts";
	private final String DB_USERNAME = "root"; // change as needed
	private final String DB_PWD = "";     // change as needed
	
    public AutoCustomerGui() {
        super("D16 - Automobile Calculation");
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        JPanel root = new JPanel(new BorderLayout());
        root.setBorder(BorderFactory.createEmptyBorder(8,8, 8, 8)); // window padding
        setContentPane(root);
        
        // Form panel (top)
        JPanel form = new JPanel(new GridBagLayout());
        GridBagConstraints gc = new GridBagConstraints();
        gc.insets = new Insets(6, 6, 6, 6);
        gc.fill = GridBagConstraints.HORIZONTAL;

        // Type
        gc.gridx = 0; gc.gridy = 0; form.add(new JLabel("Customer Type:"), gc);
        gc.gridx = 1; gc.gridy = 0; form.add(typeBox, gc);
        
        // Name
        gc.gridx = 0; gc.gridy = 1; form.add(new JLabel("Customer Name:"), gc);
        gc.gridx = 1; gc.gridy = 1; form.add(nameField, gc);

        // Amount
        gc.gridx = 0; gc.gridy = 2; form.add(new JLabel("Amount (subtotal):"), gc);
        gc.gridx = 1; gc.gridy = 2; form.add(amountField, gc);

        // Note
        // NOTE row (spans 2 columns)
        gc.gridx = 0; gc.gridy = 3; 
        gc.gridwidth = 2; 
        gc.weightx = 1;
        lblNote.setForeground(Color.DARK_GRAY);
        lblNote.setFont(lblNote.getFont().deriveFont(Font.ITALIC, 12f));
        lblNote.setText("** If the customer type is not selected, no discount will be applied");
        form.add(lblNote, gc);
        // reset for later rows
        gc.gridwidth = 1;
       
        
        // Buttons
        JButton calcBtn = new JButton("Calculate");
        calcBtn.addActionListener(this::onCalculate);
        JButton clearBtn = new JButton("Clear");
        clearBtn.addActionListener(this::onClear);

        JButton saveBtn = new JButton("Save to DB");
        clearBtn.addActionListener(this::onSave);

        JPanel btnRow = new JPanel();
        btnRow.add(calcBtn);
        btnRow.add(clearBtn);

        gc.gridx = 0; gc.gridy = 4; gc.gridwidth = 2; form.add(btnRow, gc);

        // Output area
        outputArea.setEditable(false);
        outputArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 14));
        outputArea.setLineWrap(false); // keep columns aligned
        outputArea.setMargin(new Insets(8, 10, 8, 10));
        JScrollPane scroller = new JScrollPane(outputArea,
                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        // Layout
        setLayout(new BorderLayout(10, 10));
        add(form, BorderLayout.NORTH);
        add(scroller, BorderLayout.CENTER);

        
        getRootPane().setDefaultButton(calcBtn);
        pack();
        setLocationRelativeTo(null);

        // Header
        resetTable();
    }

    private void resetTable() {
        String header =
                AutoCustomer.tableTitle() + System.lineSeparator() +
                AutoCustomer.tableHeader() + System.lineSeparator() +
                AutoCustomer.separator("-") + System.lineSeparator();
        outputArea.setText(header);
    }

    private void onCalculate(ActionEvent e) {
        String name = nameField.getText().trim();
        String type = ((String) typeBox.getSelectedItem());
        String amountText = amountField.getText().trim();

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the customer's name.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double amount;
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Amount must be a number (e.g., 123.45).", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (amount < 0) {
            JOptionPane.showMessageDialog(this, "Amount cannot be negative.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        AutoCustomer customer = new AutoCustomer(name, type, amount);
        // Append a single formatted row generated by toString()
        outputArea.append(customer.toString() + System.lineSeparator());
    }

    private void onClear(ActionEvent e) {
        nameField.setText("");
        amountField.setText("");
        typeBox.setSelectedIndex(0);
        resetTable();
        nameField.requestFocus();
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new AutoCustomerGui().setVisible(true));
    }
}
